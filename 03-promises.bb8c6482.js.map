{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,kBACnCE,EAAYH,SAASC,cAAc,iBACnCG,EAASJ,SAASC,cAAc,mBAuBtC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA9BPR,EAAKe,iBAAiB,UAEtB,SAA8BC,GAC3BA,EAAEC,iBAMF,IAJD,IAAIC,EAAQf,EAAWgB,cACjBC,EAAehB,EAAUe,cACzBE,EAAYhB,EAAOc,cAEfG,EAAI,EAAGA,GAAKD,EAAWC,IAC/BhB,EAAcgB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGC,EAACD,EAADC,EAAGjB,EAAKgB,EAALhB,MACVkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAiCC,OAARJ,EAAE,QAAYI,OAANrB,EAAM,UAEhEsB,OAAM,SAAAN,G,IAAGC,EAACD,EAADC,EAAGjB,EAAKgB,EAALhB,MACXkB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAA8BF,OAARJ,EAAE,QAAYI,OAANrB,EAAM,UAEhEU,GAASE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay= document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\n\nform.addEventListener('submit', submitCreatePromises);\n\nfunction submitCreatePromises(e) {\n   e.preventDefault();\n\n  let delay = firstDelay.valueAsNumber;\n  const delayStepVal = delayStep.valueAsNumber;\n  const amountVal = amount.valueAsNumber;\n\n   for (let i = 1; i <= amountVal; i++) {\n    createPromise(i, delay)\n      .then(({ i, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ i, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n    delay += delayStepVal;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","valueAsNumber","delayStepVal","amountVal","i1","then","param","i","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.bb8c6482.js.map"}